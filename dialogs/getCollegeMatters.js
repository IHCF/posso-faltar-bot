/*
  M√≥dulo respos√°vel em tratar os dados do usu√°rio para 
  responder as perguntas feitas

  Autores:
    Lucas Varlesse
    Felipe Menino
    Filipe Meneses
*/

const builder = require('botbuilder');
const library = new builder.Library('getCollegeMatters');
const getFinally = require('./getFinally');
const PossoFaltar = require('fatec-posso-faltar');

library.library(getFinally);

// Verifica as faltas que o aluno tem nas mat√©rias e diz se ele pode ou n√£o faltar
library.dialog('possoFaltarHoje', [
  (session) => {

    session.send('Estou verificando as mat√©rias de hoje');    
    dump = session.userData.collegeMatters;

    var temp;
    var totalFaltas = 0;
    var msg;

    for(var i in dump){
      temp = dump[i].nome;
      for(var j in dump){
        if(dump[j].nome == temp){
          totalFaltas += dump[j].absences + dump[i].absences;
        } else {
          totalFaltas = dump[i].absences;
        }
      }

      // Tempor√°rio (Ser√° adicionado retorno do json)
      if(totalFaltas >= 11 && totalFaltas <= 18){
        msg = "pode faltar, mas tome cuidado voc√™ j√° est√° com " + totalFaltas + ' faltas';
      } else if(totalFaltas >= 19 && totalFaltas <= 20){
        msg = "n√£o pode faltar, j√° que voc√™ tem quase um m√™s de faltas, que coisa feia !";        
      } else if(totalFaltas <= 10 && totalFaltas == 0){
        msg = "est√° com uma m√©dia boa de faltas. Fique em casa e durma mais um pouco ";
      }

      session.send('Na mat√©ria ' + dump[i].nome + ' voc√™ ' + msg);
      totalFaltas = 0;

    }
    session.replaceDialog('getFinally:/');
  }
])

// Informa ao usu√°rio as faltas que ele tem nas mat√©rias em que √© cadastrado
library.dialog('faltasTotal', [

  (session) => {

    let good, bad;

    dump = session.userData.collegeMatters;
    for(var i in dump){
      msg = '';
      msg = msg.concat(dump[i].nome + '\n\n' +'Quantidade de presen√ßas: ' + dump[i].presences + '\n\n' + 
      'Quantidade de faltas: ' + dump[i].absences);
    
      if(parseInt(dump[i].absences, 10) > parseInt(dump[i].presences, 10)){
          msg = msg.concat('\n\nCuidado nesta mat√©ria üòïüòì');
          good++; 
        } else  {
        msg = msg.concat('\n\nOpa! Nesta mat√©ria voc√™ est√° bem üòé');
          bad++;
        }
        session.send(msg);
    }

    if(good > bad)
      session.send('Pelo que percebi, no geral voc√™ est√° bem. Parab√©ns üòÅ');
    else
      session.send('Cuidado! A presen√ßa √© importante e pelo que percebi, voc√™ tem faltado bastante üòê');

    session.replaceDialog('getFinally:/');
  }
])

library.dialog('faltasPerMateria', [
  (session) => {

    dump = session.userData.collegeMatters;
    let allMetters = [];

    for(var i in dump){
      allMetters.push(
        dump[i].nome
      )
    }
    builder.Prompts.choice(session, 'Qual mat√©ria voc√™ deseja consultar as informa√ß√µes', allMetters, { listStyle: builder.ListStyle.button});
  },
  (session, results) => {

    for(var i in dump){
      if(dump[i].nome == results.response.entity){
        session.send(dump[i].nome + '\n\n' + 'Quantidade de presen√ßas: ' + dump[i].presences + 
        '\n\n' + 'Quantidade de faltas: ' + dump[i].absences)
      }
    }
    session.replaceDialog('getFinally:/');
  }
])

module.exports = library